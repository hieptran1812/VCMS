openapi: 3.0.0
info:
  version: 0.1.0
  title: VCMS REST API
  description: |-
    Create and manage your Dyte meetings easily using Dyte APIs

    ## Rate Limiting

    Rate limits specify the maximum number of requests (GET, POST, PUT, or DELETE) a user can make in a given time period. When you exceed a rate limit, the API request fails and returns the HTTP 429 status code. The HTTP 429 status code indicates that the user made too many requests in a given period of time ("rate limiting").

    We apply rate limits at the IP address level.
  contact:
    name: VCMS Developer Support
    email: hieptran.jobs@gmail.com
servers:
  - url: 'https://api.cluster.dyte.in/v1'
    description: Production server
paths:
  '/organizations/{organizationId}/preset':
    summary: Add a preset
    post:
      summary: Add a preset
      description: Add a preset for that organization
      tags:
        - Presets
      operationId: add_preset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePresetRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CreatePreset'
        '400':
          $ref: '#/components/responses/GenericFailure'
      security:
        - APIKEY: []
    parameters:
      - schema:
          type: string
          format: uuid
        name: organizationId
        in: path
        required: true
        description: ID of the organization
  '/organizations/{organizationId}/presets':
    summary: Get all presets
    get:
      summary: Get all presets
      description: Get all presets for given organization
      tags:
        - Presets
      operationId: get_all_presets
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        '200':
          $ref: '#/components/responses/GetPresets'
        '400':
          $ref: '#/components/responses/GenericFailure'
      security:
        - APIKEY: []
    parameters:
      - schema:
          type: string
          format: uuid
        name: organizationId
        in: path
        required: true
        description: ID of the organization
  '/organizations/{organizationId}/meeting':
    summary: Create meeting
    post:
      summary: Create a meeting
      description: Create a meeting for the given organization
      tags:
        - Meetings
      operationId: create_meeting
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMeetingResponse'
        '400':
          $ref: '#/components/responses/GenericFailure'
      security:
        - APIKEY: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMeetingRequestBody'
            examples: {}
    parameters:
      - schema:
          type: string
          format: uuid
        name: organizationId
        in: path
        required: true
        description: ID of the organization
  '/organizations/{organizationId}/meetings':
    summary: Meetings
    get:
      summary: Get all meetings
      description: Get all meetings for given organization
      tags:
        - Meetings
      operationId: get_all_meetings
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - schema:
            type: string
          in: query
          name: search
          description: Filters meeting with title or room name matching the search term
        - schema:
            type: string
            format: date-time
          in: query
          name: startTime
          description: Filters meeting with meetings created after startTime
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeetingsResponse'
        '400':  
          $ref: '#/components/responses/GenericFailure'
      security:
        - APIKEY: []
    parameters:
      - schema:
          type: string
          format: uuid
        name: organizationId
        in: path
        required: true
        description: ID of the organization
  '/organizations/{organizationId}/meetings/{meetingId}':
    summary: Meetings
    get:
      summary: Get a meeting
      description: Get a specific meeting in the given organization
      tags:
        - Meetings
      operationId: getMeeting
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeetingResponse'
        '400':
          $ref: '#/components/responses/GenericFailure'
      security:
        - APIKEY: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingRequestBody'
    parameters:
      - name: organizationId
        in: path
        description: ID of the organization
        required: true
        schema:
          type: string
          format: uuid
      - name: meetingId
        in: path
        description: ID of the meeting
        required: true
        schema:
          type: string
          format: uuid
    put:
      summary: Update a meeting
      operationId: updateMeeting
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeetingResponse'
        '400':
          $ref: '#/components/responses/GenericFailure'
      description: Update a meeting in the given organization
      security:
        - APIKEY: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMeetingRequestBody'
        description: ''
      tags:
        - Meetings
security:
  - APIKEY: []
tags:
  - name: Roles
  - name: Presets
  - name: Meetings